:hide-toc:

JavaDoc
==========

Everything below this line is autogenerated from the javadoc from the repo, but it is manually updated.

org.firstinspires.ftc.teamcode.Button
------------------------------------------

.. java:type:: public class Button
    
    
    
    .. java:field:: private ButtonStatus status  
          
          
      
    .. java:field:: public ButtonStatus previousStatus  
          
          
      
    .. java:field:: public boolean toggle  
          
          
      
    
    
    .. java:constructor:: public Button()  
          
          
      
    .. java:method:: public void update(boolean value)  
          
          
      
    .. java:method:: public boolean isPressed()  
          
          
      
    .. java:method:: public boolean hasPressedPrev()  
          
          
      

org.firstinspires.ftc.teamcode.ButtonStatus
------------------------------------------------

.. java:type:: public enum ButtonStatus
    
    .. java:field:: NOTCLICKED  
          
          
      
    .. java:field:: CLICKING  
          
          
      
    .. java:field:: CLICKED  
          
          
      

org.firstinspires.ftc.teamcode.GamepadWrapper
--------------------------------------------------

.. java:type:: public class GamepadWrapper
    
    
    
    .. java:field:: static private final double joystickDeadZone  
          
          
      
    .. java:field:: private final Gamepad gamepad  
          
          
      
    .. java:field:: public double leftStickX  
          
          
      
    .. java:field:: public double leftStickY  
          
          
      
    .. java:field:: public double rightStickX  
          
          
      
    .. java:field:: public double rightStickY  
          
          
      
    .. java:field:: public float triggerLeft  
          
          
      
    .. java:field:: public float triggerRight  
          
          
      
    .. java:field:: public Button aButton  
          
          
      
    .. java:field:: public Button bButton  
          
          
      
    .. java:field:: public Button xButton  
          
          
      
    .. java:field:: public Button yButton  
          
          
      
    .. java:field:: public Button dPadUp  
          
          
      
    .. java:field:: public Button dPadDown  
          
          
      
    .. java:field:: public Button dPadLeft  
          
          
      
    .. java:field:: public Button dPadRight  
          
          
      
    .. java:field:: public Button bumperLeft  
          
          
      
    .. java:field:: public Button bumperRight  
          
          
      
    
    
    .. java:constructor:: public GamepadWrapper(Gamepad gamepad)  
          
          
      
    .. java:method:: static public double joystickDeadzoneCorrection(double joystickInput)  
          
          Discards joystick inputs between -joystickDeadZone and joystickDeadZone
          :param joystickInput: the input of the joystick
          None
      
    .. java:method:: public void update()  
          
          
      

org.firstinspires.ftc.teamcode.Robot
-----------------------------------------

.. java:type:: public class Robot
    
    
    
    .. java:field:: static public final double length  
          
          
      
    .. java:field:: static public final double width  
          
          
      
    .. java:field:: private final MasterLogger logger  
          
          
      
    .. java:field:: static public GamepadWrapper gamepad1  
          
          
      
    .. java:field:: static public GamepadWrapper gamepad2  
          
          
      
    .. java:field:: public final String initLogTag  
          
          
      
    .. java:field:: public final ElapsedTime timer  
          
          
      
    .. java:field:: public final boolean visionEnabled  
          
          
      
    .. java:field:: private final AllianceColor allianceColor  
          
          
      
    .. java:field:: private final boolean webEnabled  
          
          
      
    .. java:field:: private final boolean odometryEnabled  
          
          
      
    .. java:field:: private final HardwareMap hardwareMap  
          
          
      
    .. java:field:: private final Telemetry telemetry  
          
          
      
    .. java:field:: public DcMotorEx frontLeftDriveMotor  
          
          
      
    .. java:field:: public DcMotorEx frontRightDriveMotor  
          
          
      
    .. java:field:: public DcMotorEx rearRightDriveMotor  
          
          
      
    .. java:field:: public DcMotorEx rearLeftDriveMotor  
          
          
      
    .. java:field:: public DcMotorEx leftEncoder  
          
          
      
    .. java:field:: public DcMotorEx backEncoder  
          
          
      
    .. java:field:: public DcMotorEx rightEncoder  
          
          
      
    .. java:field:: public BNO055IMU imu  
          
          
      
    .. java:field:: public OldDrive drive  
          
          
      
    .. java:field:: public Control control  
          
          
      
    .. java:field:: public Vision vision  
          
          
      
    .. java:field:: public WebThread web  
          
          
      
    
    
    .. java:constructor:: public Robot(HardwareMap hardwareMap, Telemetry telemetry, ElapsedTime timer, AllianceColor allianceColor, Gamepad gamepad1, Gamepad gamepad2, HashMap flags)  
          
          :param timer:         The elapsed time
          :param allianceColor: the alliance color
      
    .. java:method:: static public void updateGamepads()  
          
          
      
    .. java:method:: public double getBatteryVoltage()  
          
          
      
    .. java:method:: public void init()  
          
          Runs all init operations
      
    .. java:method:: private void odometryInit()  
          
          
      
    .. java:method:: private void imuInit()  
          
          
      
    .. java:method:: private void motorInit()  
          
          Gets Motors from hardware ap and sets zero power behavior and direction
      
    .. java:method:: private void servoInit()  
          
          
      
    .. java:method:: public void subsystemInit()  
          
          
      
    .. java:method:: public void telemetryBroadcast(String caption, String value)  
          
          
      

org.firstinspires.ftc.teamcode.Auto.ArmMovementThread
----------------------------------------------------------

.. java:type:: public class ArmMovementThread
    
    
    
    .. java:field:: public volatile boolean reachedPosition  
          
          
      
    .. java:field:: public volatile ReentrantLock extended  
          
          
      
    .. java:field::  Control control  
          
          
      
    
    
    .. java:constructor:: public ArmMovementThread(Control control)  
          
          
      
    .. java:method:: public void run()  
          
          
      

org.firstinspires.ftc.teamcode.Auto.Auto
---------------------------------------------

.. java:type:: public abstract class Auto
    
    Auto creates a robot and runs it in auto mode.
    
    **See Also:** :java:ref:`LinearOpMode` 
    
    
    .. java:field:: static public final float mmPerInch  
          
          Number of millimeters per an inch
      
    .. java:field:: public Robot robot  
          
          The robot class in the op mode
      
    .. java:field:: public ElapsedTime timer  
          
          
      
    .. java:field:: public ArmMovementThread controlThread  
          
          
      
    
    
    .. java:method:: public void initAuto(AllianceColor allianceColor)  
          
          Initializes the robot class and sets the robot as the newly initialized robot.
          :param allianceColor: The alliance color
      
    .. java:method:: public void adjustPosition(MarkerLocation location)  
          
          
      

org.firstinspires.ftc.teamcode.Auto.AutoBlueLeft
-----------------------------------------------------

.. java:type:: public class AutoBlueLeft
    
    
    
    
    
    .. java:method:: public void runOpMode() throws InterruptedException  
          
          
      

org.firstinspires.ftc.teamcode.Auto.AutoBlueRight
------------------------------------------------------

.. java:type:: public class AutoBlueRight
    
    
    
    
    
    .. java:method:: public void runOpMode() throws InterruptedException  
          
          
      

org.firstinspires.ftc.teamcode.Auto.AutoRedLeft
----------------------------------------------------

.. java:type:: public class AutoRedLeft
    
    
    
    
    
    .. java:method:: public void runOpMode() throws InterruptedException  
          
          
      

org.firstinspires.ftc.teamcode.Auto.AutoRedRight
-----------------------------------------------------

.. java:type:: public class AutoRedRight
    
    
    
    
    
    .. java:method:: public void runOpMode() throws InterruptedException  
          
          
      

org.firstinspires.ftc.teamcode.Geometry.Circle
---------------------------------------------------

.. java:type:: public class Circle
    
    
    
    .. java:field:: public Vector center  
          
          
      
    .. java:field:: public double radius  
          
          
      
    
    
    .. java:constructor:: public Circle(Vector center, double radius)  
          
          
      
    .. java:method:: public List segmentIntersections(Line seg)  
          
          
      

org.firstinspires.ftc.teamcode.Geometry.Line
-------------------------------------------------

.. java:type:: public class Line
    
    
    
    .. java:field:: public Vector start  
          
          
      
    .. java:field:: public Vector end  
          
          
      
    
    
    .. java:constructor:: public Line(Vector start, Vector end)  
          
          
      
    .. java:method:: public double length()  
          
          
      
    .. java:method:: public String toString()  
          
          
      

org.firstinspires.ftc.teamcode.Geometry.Path
-------------------------------------------------

.. java:type:: public class Path
    
    
    
    .. java:field:: public ArrayList waypoints  
          
          
      
    .. java:field:: public ArrayList lines  
          
          
      
    
    
    .. java:constructor:: public Path(ArrayList stops)  
          
          
      
    .. java:method:: public Pose end()  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Subsystem
--------------------------------------------------------

.. java:type:: public abstract class Subsystem
    
    Superclass to all subsystems, it does some bootstrapping for them (Vision, Control, and Drive)
    
    
    .. java:field:: protected final MasterLogger logger  
          
          
      
    
    
    .. java:constructor:: public Subsystem(Telemetry telemetry, String tag)  
          
          inits with telemetry, since every subsystem uses it.
          :param telemetry: The telemetry for logging
      

org.firstinspires.ftc.teamcode.Subsystems.Control.Control
--------------------------------------------------------------

.. java:type:: public class Control
    
    Control subsystem for controlling arms and claws
    
    
    .. java:field:: static public SlidePosition RETRACTED_SLIDE  
          
          
      
    .. java:field:: static public SlidePosition SCORE_LOW_SLIDE  
          
          
      
    
    
    .. java:constructor:: public Control(Telemetry telemetry)  
          
          
      
    .. java:method:: public void initDevicesAuto()  
          
          
      
    .. java:method:: public void initDevicesTeleop()  
          
          
      
    .. java:method:: public void airplaneLaunch(PlaneLaunchRange range)  
          
          
      
    .. java:method:: public void moveLinearSlide(SlidePosition pos)  
          
          
      
    .. java:method:: public void moveLinearSlideSync(SlidePosition pos)  
          
          
      
    .. java:method:: public void setLinearSlideMotorPower(double power)  
          
          
      
    .. java:method:: public void setClaw(ClawState clawState)  
          
          
      
    .. java:method:: public void setClawSync(ClawState clawState)  
          
          
      
    .. java:method:: public void openClaw()  
          
          
      
    .. java:method:: public void closeClaw()  
          
          
      
    .. java:method:: public void openClawSync()  
          
          
      
    .. java:method:: public void closeClawSync()  
          
          
      
    .. java:method:: public void moveCrane(CraneState craneState)  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Control.ScorePixelThread
-----------------------------------------------------------------------

.. java:type:: public class ScorePixelThread
    
    
    
    .. java:field:: private final Control control  
          
          
      
    
    
    .. java:constructor:: public ScorePixelThread(Control control)  
          
          
      
    .. java:method:: public void run()  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Drive.Drive
----------------------------------------------------------

.. java:type:: public class Drive
    
    Mecanum drivetrain subsystem
    
    
    .. java:field:: static public double mmPerInch  
          
          
      
    .. java:field:: static public double PURE_PURSUIT_LOOKAHEAD_DISTANCE  
          
          
      
    .. java:field:: static public double DRIVE_GEAR_REDUCTION  
          
          
      
    .. java:field:: static public double TICKS_PER_MOTOR_REV_20  
          
          
      
    .. java:field:: static public double RPM_MAX_NEVERREST_20  
          
          
      
    .. java:field:: static public double ANGULAR_V_MAX_NEVERREST_20  
          
          
      
    .. java:field:: static public double MOTOR_TICK_PER_REV_YELLOW_JACKET_312  
          
          
      
    .. java:field:: static public double GOBUILDA_MECANUM_DIAMETER_MM  
          
          
      
    .. java:field:: static public double COUNTS_PER_MM  
          
          
      
    .. java:field:: static public double WHEEL_DIAMETER_MM  
          
          
      
    .. java:field:: static public double WHEEL_DIAMETER_INCHES  
          
          
      
    .. java:field:: static public double COUNTS_PER_INCH  
          
          
      
    .. java:field:: static public double COUNTS_CORRECTION_X  
          
          
      
    .. java:field:: static public double COUNTS_CORRECTION_Y  
          
          
      
    .. java:field:: static public double COUNTS_PER_DEGREE  
          
          
      
    .. java:field:: static public PIDCoefficients xyPIDCoefficients  
          
          
      
    .. java:field:: static public PIDCoefficients thetaPIDCoefficients  
          
          
      
    .. java:field:: public final MotorGeneric motors  
          
          
      
    .. java:field:: private final DcMotorEx odL  
          
          
      
    .. java:field:: private final DcMotorEx odB  
          
          
      
    .. java:field:: private final DcMotorEx odR  
          
          
      
    .. java:field:: public double ODOMETRY_TRACKWIDTH  
          
          
      
    .. java:field:: public double ODOMETRY_FOWARD_DISPLACEMENT  
          
          
      
    .. java:field:: public double ODOMETRY_COUNTS_PER_MM  
          
          
      
    .. java:field:: public boolean debug  
          
          
      
    .. java:field:: public BNO055IMU imu  
          
          
      
    .. java:field:: static public Pose currentPosition  
          
          
      
    .. java:field:: public int previousLeftOdometryTicks  
          
          
      
    .. java:field:: public int previousBackOdometryTicks  
          
          
      
    .. java:field:: public int previousRightOdometryTicks  
          
          
      
    .. java:field:: private final Localizer localizer  
          
          
      
    .. java:field:: public PoseEstimationMethod poseEstimationMethod  
          
          
      
    
    
    .. java:constructor:: public Drive(MotorGeneric motors, DcMotorEx odometry, PoseEstimationMethod poseEstimationMethod, BNO055IMU imu, Telemetry telemetry)  
          
          Initializes the drive subsystem
          :param motors:      The motors ...
          :param telemetry:   The telemetry
      
    .. java:method:: public void setZeroPowerBehavior(DcMotor mode)  
          
          Uniformly sets zero power behavior of all drive motors
          :param mode: Zero Power Mode
          
          **See Also:** :java:ref:`DcMotorEx.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior)` 
      
    .. java:method:: public void setRunMode(DcMotor mode)  
          
          Uniformly sets run mode of all drive motors
          :param mode: Run mode
          
          **See Also:** :java:ref:`DcMotorEx.setMode(DcMotor.RunMode)` 
      
    .. java:method:: public void setDrivePowers(MotorGeneric powers)  
          
          Sets the drive power of each motor individually.
          :param powers: the powers to set each of the motors to
          
          **See Also:** :java:ref:`DcMotorEx.setPower(double)` 
      
    .. java:method:: public void setDrivePowers(double power)  
          
          
      
    .. java:method:: private void stop()  
          
          Sets all drive motor powers to zero
      
    .. java:method:: public MotorGeneric calcMotorPowers(double leftStickX, double leftStickY, double rightStickX)  
          
          Calculates the motor powers when given the position o the left and right sticks
          :param leftStickX:  left joystick x position
          :param leftStickY:  left joystick y position
          :param rightStickX: right joystick x position for turning
          None
      
    .. java:method:: static public double normalizeAngle(double angle)  
          
          
      
    .. java:method:: public void motorController(Targeter targeter, PositionController positionController)  
          
          
      
    .. java:method:: private void updateCurrentPose(Pose startingPosition)  
          
          
      
    .. java:method:: private HolonomicPositionController getHolonomicController()  
          
          
      
    .. java:method:: public void move(Pose p)  
          
          
      
    .. java:method:: public void moveVector(Vector vector)  
          
          
      
    .. java:method:: public void moveVector(Vector vector, double angle)  
          
            :param vector: No Description
            :param angle: No Description
          None
      
    .. java:method:: public void moveAngle(int angle)  
          
          
      
    .. java:method:: public void purePursuit(Path path)  
          
          
      
    .. java:method:: public void followProfile(MotionProfile profile, VAController vaController, PositionController positionController)  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Drive.FeedForward
----------------------------------------------------------------

.. java:type:: public class FeedForward
    
    
    
    .. java:field:: private double kV  
          
          
      
    .. java:field:: private double kA  
          
          
      
    
    
    .. java:constructor:: public FeedForward(double kV, double kA)  
          
          
      
    .. java:method:: public double calculate(double velocity, double acceleration)  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Drive.MotorGeneric
-----------------------------------------------------------------

.. java:type:: public class MotorGeneric
    
    
    
    .. java:field:: public T frontLeft  
          
          
      
    .. java:field:: public T frontRight  
          
          
      
    .. java:field:: public T rearLeft  
          
          
      
    .. java:field:: public T rearRight  
          
          
      
    
    
    .. java:constructor:: public MotorGeneric(T frontLeft, T frontRight, T rearLeft, T rearRight)  
          
          
      
    .. java:constructor:: public MotorGeneric(T motors)  
          
          
      
    .. java:constructor:: public MotorGeneric(ArrayList motors)  
          
          
      
    .. java:method:: public ArrayList toList()  
          
          
      
    .. java:method:: public String toString()  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Drive.OldDrive
-------------------------------------------------------------

.. java:type:: public class OldDrive
    
    Mecanum drivetrain subsystem
    
    
    .. java:field:: static public final double mmPerInch  
          
          
      
    .. java:field:: static private final double DRIVE_GEAR_REDUCTION  
          
          
      
    .. java:field:: static private final double TICKS_PER_MOTOR_REV_20  
          
          
      
    .. java:field:: static private final double RPM_MAX_NEVERREST_20  
          
          
      
    .. java:field:: static private final double ANGULAR_V_MAX_NEVERREST_20  
          
          
      
    .. java:field:: static private final double MOTOR_TICK_PER_REV_YELLOW_JACKET_312  
          
          
      
    .. java:field:: static private final double GOBUILDA_MECANUM_DIAMETER_MM  
          
          
      
    .. java:field:: static private final double COUNTS_PER_MM  
          
          
      
    .. java:field:: static private final double WHEEL_DIAMETER_MM  
          
          
      
    .. java:field:: static private final double WHEEL_DIAMETER_INCHES  
          
          
      
    .. java:field:: static private final double COUNTS_PER_INCH  
          
          
      
    .. java:field:: static private final double COUNTS_CORRECTION_X  
          
          
      
    .. java:field:: static private final double COUNTS_CORRECTION_Y  
          
          
      
    .. java:field:: static private final double COUNTS_PER_DEGREE  
          
          
      
    .. java:field:: static private final double DRIVE_SPEED  
          
          
      
    .. java:field:: static private final double motorKp  
          
          
      
    .. java:field:: static private final double motorKi  
          
          
      
    .. java:field:: static private final double motorKd  
          
          
      
    .. java:field:: public final DcMotorEx frontLeft  
          
          
      
    .. java:field:: public final DcMotorEx frontRight  
          
          
      
    .. java:field:: public final DcMotorEx rearLeft  
          
          
      
    .. java:field:: public final DcMotorEx rearRight  
          
          
      
    .. java:field:: public final DcMotorEx odometry  
          
          
      
    .. java:field:: private final boolean debug  
          
          
      
    .. java:field:: private final ElapsedTime timer  
          
          
      
    .. java:field:: private final double robotX  
          
          
      
    .. java:field:: private final double robotY  
          
          
      
    .. java:field:: private final double robotTheta  
          
          
      
    
    
    .. java:constructor:: public OldDrive(MotorGeneric motors, DcMotorEx odometryEnabled, Object imu, Telemetry telemetry, ElapsedTime elapsedTime)  
          
          Initializes the drive subsystem
          :param telemetry:   The telemetry
          :param elapsedTime: The timer for the elapsed time
      
    .. java:method:: static private boolean isMotorDone(int currentCount, int targetCount)  
          
          
      
    .. java:method:: public void setZeroPowerBehavior(DcMotor mode)  
          
          Uniformly sets zero power behavior of all drive motors
          :param mode: Zero Power Mode
          
          **See Also:** :java:ref:`DcMotorEx.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior)` 
      
    .. java:method:: public void setRunMode(DcMotor mode)  
          
          Uniformly sets run mode of all drive motors
          :param mode: Run mode
          
          **See Also:** :java:ref:`DcMotorEx.setMode(DcMotor.RunMode)` 
      
    .. java:method:: public void setDrivePowers(double powers)  
          
          Sets the drive power of each motor individually.
          :param powers: the powers to set each of the motors to
          
          **See Also:** :java:ref:`DcMotorEx.setPower(double)` 
      
    .. java:method:: public void setDrivePowers(MotorGeneric powers)  
          
          
      
    .. java:method:: public void setDrivePowers(double power)  
          
          
      
    .. java:method:: private void stop()  
          
          Sets all drive motor powers to zero
      
    .. java:method:: public MotorGeneric calcMotorPowers(double leftStickX, double leftStickY, double rightStickX)  
          
          Calculates the motor powers when given the position o the left and right sticks
          :param leftStickX:  left joystick x position
          :param leftStickY:  left joystick y position
          :param rightStickX: right joystick x position for turning
          None
      
    .. java:method:: public void allMotorControl(int tickCount, PID moveSystems)  
          
          PID motor control program to ensure all four motors are synchronized
          :param tickCount: How far each motor should go
      
    .. java:method:: public void moveVector(Vector v)  
          
          
      
    .. java:method:: public void moveAngle(double turnAngle)  
          
          
      
    .. java:method:: public void moveVector(Vector v, double turnAngle)  
          
          
      
    .. java:method:: public void move(Pose pose)  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Drive.PID
--------------------------------------------------------

.. java:type:: public class PID
    
    
    
    .. java:field:: protected boolean hasRun  
          
          
      
    .. java:field:: protected ElapsedTime timer  
          
          
      
    .. java:field:: protected double previousError  
          
          
      
    .. java:field:: protected double integralSum  
          
          
      
    .. java:field:: protected double derivative  
          
          
      
    .. java:field:: protected double previousDerivative  
          
          
      
    .. java:field:: private double derivativeInverseFilterStrength  
          
          
      
    .. java:field:: private final double Kp  
          
          
      
    .. java:field:: private final double Ki  
          
          
      
    .. java:field:: private final double Kd  
          
          
      
    
    
    .. java:constructor:: public PID(double Kp, double Ki, double Kd)  
          
          
      
    .. java:constructor:: public PID(PIDCoefficients coefficients)  
          
          
      
    .. java:method:: public double calculate(double target, double measured)  
          
          calculate PID output
          :param target:   the target position
          :param measured: current system state
          None
      
    .. java:method:: public double getDT()  
          
          get the time constant
          None
      
    .. java:method:: protected double calculateError(double target, double measured)  
          
          
      
    .. java:method:: protected void integrate(double error, double dt)  
          
          
      
    .. java:method:: protected double calculateDerivative(double error, double dt)  
          
          
      
    .. java:method:: public String toString()  
          
          
      
    .. java:method:: public void reset()  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Drive.PIDCoefficients
--------------------------------------------------------------------

.. java:type:: public class PIDCoefficients
    
    
    
    .. java:field:: public double kP  
          
          
      
    .. java:field:: public double kI  
          
          
      
    .. java:field:: public double kD  
          
          
      
    
    
    .. java:constructor:: public PIDCoefficients(double kP, double kI, double kD)  
          
          
      
    .. java:method:: public String toString()  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Drive.PoseEstimationMethod
-------------------------------------------------------------------------

.. java:type:: public enum PoseEstimationMethod
    
    .. java:field:: ODOMETRY  
          
          
      
    .. java:field:: IMU  
          
          
      
    .. java:field:: VISUAL  
          
          
      
    .. java:field:: MOTOR_ENCODERS  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Drive.Controller.ControllerOutput
--------------------------------------------------------------------------------

.. java:type:: public class ControllerOutput
    
    
    
    .. java:field:: public final double x  
          
          
      
    .. java:field:: public final double y  
          
          
      
    .. java:field:: public final double heading  
          
          
      
    .. java:field:: public final double actualHeading  
          
          
      
    
    
    .. java:constructor:: public ControllerOutput(double x, double y, double heading, double actualHeading)  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Drive.Controller.HolonomicPositionController
-------------------------------------------------------------------------------------------

.. java:type:: public class HolonomicPositionController
    
    
    
    .. java:field::  PID xControl  
          
          
      
    .. java:field::  PID yControl  
          
          
      
    .. java:field::  PID thetaControl  
          
          
      
    
    
    .. java:constructor:: public HolonomicPositionController(PID x, PID y, PID theta)  
          
          
      
    .. java:method:: public ControllerOutput calculate(Pose current, Pose target)  
          
          
      
    .. java:method:: public void resetHeadingPID()  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Drive.Controller.HolonomicVAController
-------------------------------------------------------------------------------------

.. java:type:: public class HolonomicVAController
    
    
    
    .. java:field::  FeedForward xControl  
          
          
      
    .. java:field::  FeedForward yControl  
          
          
      
    .. java:field::  FeedForward thetaControl  
          
          
      
    
    
    .. java:constructor:: public HolonomicVAController(FeedForward x, FeedForward y, FeedForward theta)  
          
          
      
    .. java:method:: public ControllerOutput calculate(double heading, MotionProfileOutput target)  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Drive.Controller.PositionController
----------------------------------------------------------------------------------

.. java:type:: public class PositionController
    
    
    
    
    
    .. java:method::  ControllerOutput calculate(Pose current, Pose target)  
          
          
      
    .. java:method::  void resetHeadingPID()  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Drive.Controller.VAController
----------------------------------------------------------------------------

.. java:type:: public class VAController
    
    
    
    
    
    .. java:method::  ControllerOutput calculate(double heading, MotionProfileOutput targetPose)  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Drive.Curve.QuinticSpline1D
--------------------------------------------------------------------------

.. java:type:: public class QuinticSpline1D
    
    
    
    .. java:field::  double a  
          
          
      
    .. java:field::  double b  
          
          
      
    .. java:field::  double c  
          
          
      
    .. java:field::  double d  
          
          
      
    .. java:field::  double e  
          
          
      
    .. java:field::  double f  
          
          
      
    
    
    .. java:constructor:: public QuinticSpline1D(double begin, double end)  
          
          
      
    .. java:method:: public double get(double t, int n)  
          
          
      
    .. java:method:: public String toString()  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Drive.Curve.QuinticSpline2D
--------------------------------------------------------------------------

.. java:type:: public class QuinticSpline2D
    
    
    
    .. java:field:: public QuinticSpline1D x  
          
          
      
    .. java:field:: public QuinticSpline1D y  
          
          
      
    
    
    .. java:constructor:: public QuinticSpline2D(QuinticSpline1D x, QuinticSpline1D y)  
          
          
      
    .. java:method:: public Vector get(double t, int n)  
          
          
      
    .. java:method:: public String toString()  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Drive.Localizer.Localizer
------------------------------------------------------------------------

.. java:type:: public abstract class Localizer
    
    
    
    
    
    .. java:method:: public MotorGeneric cropMotorPowers(MotorGeneric powers)  
          
          
      
    .. java:method:: public MotorGeneric reduceDrivePowers(MotorGeneric powers, double scalingFactor)  
          
          
      
    .. java:method:: public abstract MotorGeneric localize(ControllerOutput output)  
          
          
      
    .. java:method:: public MotorGeneric mix(ControllerOutput first, ControllerOutput second, int firstMultiplier, int secondMultiplier)  
          
          
      
    .. java:method:: public MotorGeneric mix(ControllerOutput first, ControllerOutput second)  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Drive.Localizer.MecanumLocalizer
-------------------------------------------------------------------------------

.. java:type:: public class MecanumLocalizer
    
    
    
    
    
    .. java:constructor:: public MecanumLocalizer()  
          
          
      
    .. java:method:: public MotorGeneric localize(ControllerOutput output)  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Drive.MotionProfile.MotionProfile
--------------------------------------------------------------------------------

.. java:type:: public class MotionProfile
    
    
    
    
    
    .. java:method::  MotionProfileOutput calculate(double time)  
          
          
      
    .. java:method::  boolean isFinished(double time)  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Drive.MotionProfile.MotionProfile1D
----------------------------------------------------------------------------------

.. java:type:: public class MotionProfile1D
    
    
    
    
    
    .. java:method::  MotionProfileOutput1D calculate(double time)  
          
          
      
    .. java:method::  boolean isFinished(double time)  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Drive.MotionProfile.MotionProfileOutput
--------------------------------------------------------------------------------------

.. java:type:: public class MotionProfileOutput
    
    
    
    .. java:field:: public final MotionProfileOutput1D x  
          
          
      
    .. java:field:: public final MotionProfileOutput1D y  
          
          
      
    .. java:field:: public final MotionProfileOutput1D heading  
          
          
      
    
    
    .. java:constructor:: public MotionProfileOutput(MotionProfileOutput1D x, MotionProfileOutput1D y, MotionProfileOutput1D heading)  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Drive.MotionProfile.MotionProfileOutput1D
----------------------------------------------------------------------------------------

.. java:type:: public class MotionProfileOutput1D
    
    
    
    .. java:field:: public final double position  
          
          
      
    .. java:field:: public final double velocity  
          
          
      
    .. java:field:: public final double acceleration  
          
          
      
    
    
    .. java:constructor:: public MotionProfileOutput1D(double position, double velocity, double acceleration)  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Drive.MotionProfile.TrapezoidalMotionProfile
-------------------------------------------------------------------------------------------

.. java:type:: public class TrapezoidalMotionProfile
    
    
    
    .. java:field:: public double maxAcceleration  
          
          
      
    .. java:field:: public double maxVelocity  
          
          
      
    .. java:field:: public Pose target  
          
          
      
    .. java:field:: public TrapezoidalMotionProfile1D x  
          
          
      
    .. java:field:: public TrapezoidalMotionProfile1D y  
          
          
      
    .. java:field:: public TrapezoidalMotionProfile1D heading  
          
          
      
    
    
    .. java:constructor:: public TrapezoidalMotionProfile(double maxAcceleration, double maxVelocity, Pose target)  
          
          
      
    .. java:method:: public MotionProfileOutput calculate(double time)  
          
          
      
    .. java:method:: public boolean isFinished(double time)  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Drive.MotionProfile.TrapezoidalMotionProfile1D
---------------------------------------------------------------------------------------------

.. java:type:: public class TrapezoidalMotionProfile1D
    
    
    
    .. java:field:: public double maxAcceleration  
          
          
      
    .. java:field:: public double maxVelocity  
          
          
      
    .. java:field:: public double distance  
          
          
      
    
    
    .. java:constructor:: public TrapezoidalMotionProfile1D(double maxAcceleration, double maxVelocity, double distance)  
          
          
      
    .. java:method:: public MotionProfileOutput1D calculate(double time)  
          
          Return the current reference position based on the given motion profile times, maximum acceleration, velocity,
          and current time. Calculate the time it takes to accelerate to max velocity
          :param time: how much time has passed since the start of the motion profile, in milliseconds
          None
      
    .. java:method:: public boolean isFinished(double time)  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Drive.Targeter.PurePursuit
-------------------------------------------------------------------------

.. java:type:: public class PurePursuit
    
    
    
    .. java:field::  Path path  
          
          
      
    .. java:field::  double lookaheadDistance  
          
          
      
    
    
    .. java:constructor:: public PurePursuit(Path path, double lookaheadDistance)  
          
          
      
    .. java:method:: public Pose getTarget(Pose currentPosition)  
          
          
      
    .. java:method:: public boolean reachedTarget(Pose currentPosition)  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Drive.Targeter.StaticTargeter
----------------------------------------------------------------------------

.. java:type:: public class StaticTargeter
    
    
    
    .. java:field::  Pose target  
          
          
      
    
    
    .. java:constructor:: public StaticTargeter(Pose target)  
          
          
      
    .. java:method:: public Pose getTarget(Pose currentPosition)  
          
          
      
    .. java:method:: public boolean reachedTarget(Pose currentPosition)  
          
          
      
    .. java:method:: public String toString()  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Drive.Targeter.Targeter
----------------------------------------------------------------------

.. java:type:: public class Targeter
    
    
    
    
    
    .. java:method::  Pose getTarget(Pose currentPosition)  
          
          
      
    .. java:method::  boolean reachedTarget(Pose currentPosition)  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Vision.AprilTagDetectionThread
-----------------------------------------------------------------------------

.. java:type:: public class AprilTagDetectionThread
    
    
    
    .. java:field:: public boolean terminate  
          
          
      
    .. java:field:: public List currentDetections  
          
          
      
    .. java:field:: private AprilTagProcessor aprilTag  
          
          The variable to store our instance of the AprilTag processor.
      
    .. java:field:: private final CameraName cameraName  
          
          
      
    .. java:field:: private VisionPortal visionPortal  
          
          The variable to store our instance of the vision portal.
      
    
    
    .. java:constructor:: public AprilTagDetectionThread(CameraName cameraName)  
          
          
      
    .. java:method:: public void run()  
          
          
      
    .. java:method:: private void initAprilTag()  
          
          Initialize the AprilTag processor.
      
    .. java:method:: private void updateAprilTagList()  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Vision.MarkerLocation
--------------------------------------------------------------------

.. java:type:: public enum MarkerLocation
    
    .. java:field:: LEFT  
          
          
      
    .. java:field:: MIDDLE  
          
          
      
    .. java:field:: RIGHT  
          
          
      
    .. java:field:: UNKNOWN  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Vision.Vision
------------------------------------------------------------

.. java:type:: public class Vision
    
    The Vision Subsystem
    
    
    .. java:field:: static public final int CAMERA_WIDTH  
          
          
      
    .. java:field:: static public final int CAMERA_HEIGHT  
          
          
      
    .. java:field:: static public final String WEBCAM_NAME  
          
          
      
    .. java:field:: static private final double mmPerInch  
          
          
      
    .. java:field:: static final double CAMERA_FORWARD_DISPLACEMENT  
          
          
      
    .. java:field:: static final double CAMERA_VERTICAL_DISPLACEMENT  
          
          
      
    .. java:field:: static final double CAMERA_RIGHT_DISPLACEMENT  
          
          
      
    .. java:field:: private final HardwareMap hardwareMap  
          
          
      
    .. java:field:: private final AllianceColor allianceColor  
          
          
      
    .. java:field:: public AprilTagDetectionThread aprilTagDetectionThread  
          
          
      
    
    
    .. java:constructor:: public Vision(Telemetry telemetry, HardwareMap hardwareMap, AllianceColor allianceColor)  
          
          Class instantiation
          :param telemetry:     Telemetry
          :param hardwareMap:   the hardware map
          :param allianceColor: the alliance color
      
    .. java:method:: public void stopAprilTagDetection() throws InterruptedException  
          
          
      
    .. java:method:: public Vector getRobotPosition()  
          
          
      
    .. java:method:: public void stop()  
          
          
      
    .. java:method:: public MarkerLocation detectMarkerRun()  
          
          This method waits until the search for the marker is done, and then it return the marker
          location. It waits until the marker is found, then it returns the marker location.
          None
      

org.firstinspires.ftc.teamcode.Subsystems.Web.View
-------------------------------------------------------

.. java:type:: public class View
    
    
    
    
    

org.firstinspires.ftc.teamcode.Subsystems.Web.Web
------------------------------------------------------

.. java:type:: public class Web
    
    
    
    
    
    .. java:constructor:: public Web(Telemetry telemetry)  
          
          inits with telemetry, since every subsystem uses it.
          :param telemetry: The telemetry for logging
      

org.firstinspires.ftc.teamcode.Subsystems.Web.WebAction
------------------------------------------------------------

.. java:type:: public class WebAction
    
    
    
    .. java:field:: public String statusString  
          
          
      
    .. java:field:: public int progress  
          
          
      
    .. java:field:: public String name  
          
          
      
    .. java:field:: public Status status  
          
          
      
    .. java:field:: public String startTimestamp  
          
          
      
    
    
    .. java:constructor:: public WebAction(String name, String status)  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Web.WebLog
---------------------------------------------------------

.. java:type:: public class WebLog
    
    
    
    .. java:field:: public String tag  
          
          
      
    .. java:field:: public String message  
          
          
      
    .. java:field:: public LogSeverity severity  
          
          
      
    .. java:field:: public String timestamp  
          
          
      
    .. java:field:: public Object data  
          
          
      
    
    
    .. java:constructor:: public WebLog(String tag, String message, LogSeverity severity, Object data)  
          
          
      
    .. java:constructor:: public WebLog(String tag, String message, LogSeverity severity)  
          
          
      
    .. java:method:: static public void verbose(String tag, String message)  
          
          
      
    .. java:method:: static public void verbose(String tag, String message, Object object)  
          
          
      
    .. java:method:: static public void debug(String tag, String message)  
          
          
      
    .. java:method:: static public void debug(String tag, String message, Object object)  
          
          
      
    .. java:method:: static public void info(String tag, String message)  
          
          
      
    .. java:method:: static public void info(String tag, String message, Object object)  
          
          
      
    .. java:method:: static public void warning(String tag, String message)  
          
          
      
    .. java:method:: static public void warning(String tag, String message, Object object)  
          
          
      
    .. java:method:: static public void error(String tag, String message)  
          
          
      
    .. java:method:: static public void error(String tag, String message, Object object)  
          
          
      
    .. java:method:: public String toString()  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Web.WebThread
------------------------------------------------------------

.. java:type:: public class WebThread
    
    
    
    .. java:field:: static private final ArrayList logs  
          
          
      
    .. java:field:: static private final ArrayList actions  
          
          
      
    .. java:field:: static private final HashMap defaultHeaders  
          
          
      
    .. java:field::  int port  
          
          
      
    .. java:field::  ServerSocket serverSocket  
          
          
      
    .. java:field::  WebCanvas webCanvas  
          
          
      
    .. java:field:: private final Gson gson  
          
          
      
    .. java:field:: static public volatile boolean terminate  
          
          
      
    
    
    .. java:constructor:: public WebThread() throws IOException  
          
          
      
    .. java:constructor:: public WebThread(int port) throws IOException  
          
          
      
    .. java:method:: static public void addLog(WebLog log)  
          
          
      
    .. java:method:: static public void setPercentage(String task, int percentage)  
          
          
      
    .. java:method:: static public void setPercentage(String task, int progress, int total)  
          
          
      
    .. java:method:: static public void addAction(WebAction action)  
          
          
      
    .. java:method:: static public void removeAction(String task)  
          
          
      
    .. java:method:: static private String readHeaders(InputStreamReader reader) throws IOException  
          
          
      
    .. java:method:: private Response returnError(WebError error)  
          
          
      
    .. java:method:: private void invalidMethod(String method) throws WebError  
          
          
      
    .. java:method:: private Response returnObject(Object obj)  
          
          
      
    .. java:method:: private Response handleRequest(Request req) throws WebError  
          
          
      
    .. java:method:: public void run()  
          
          Workflow:
          - Read socket to end
          - Parse request (:java:ref:`{@link Request.Request(String)`)
          - Generate response (:java:ref:`{@link WebThread.handleRequest(Request)`)
          - Return response
      

org.firstinspires.ftc.teamcode.Subsystems.Web.Canvas.CanvasLayer
---------------------------------------------------------------------

.. java:type:: public class CanvasLayer
    
    
    
    .. java:field:: public List objects  
          
          
      
    .. java:field:: public int height  
          
          
      
    .. java:field:: public int width  
          
          
      
    
    
    .. java:constructor:: public CanvasLayer(int height, int width)  
          
          
      
    .. java:method:: public RGBA getPixels()  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Web.Canvas.CanvasObject
----------------------------------------------------------------------

.. java:type:: public class CanvasObject
    
    
    
    
    
    .. java:method::  List getPixels()  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Web.Canvas.CanvasPixel
---------------------------------------------------------------------

.. java:type:: public class CanvasPixel
    
    
    
    .. java:field::  Pixel pixel  
          
          
      
    
    
    .. java:constructor:: public CanvasPixel(Pixel pixel)  
          
          
      
    .. java:method:: public List getPixels()  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Web.Canvas.Circle
----------------------------------------------------------------

.. java:type:: public class Circle
    
    
    
    .. java:field:: public int radius  
          
          
      
    .. java:field:: public RGBA color  
          
          
      
    .. java:field:: public Vector center  
          
          
      
    
    
    .. java:constructor:: public Circle(int radius, Vector center, RGBA color)  
          
          
      
    .. java:method:: public List getPixels()  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Web.Canvas.Image
---------------------------------------------------------------

.. java:type:: public class Image
    
    
    
    .. java:field::  Bitmap internal  
          
          
      
    
    
    .. java:constructor:: public Image(Bitmap bitmap)  
          
          
      
    .. java:method:: public List getPixels()  
          
          
      
    .. java:method:: public String toString()  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Web.Canvas.Pixel
---------------------------------------------------------------

.. java:type:: public class Pixel
    
    
    
    .. java:field:: public int x  
          
          
      
    .. java:field:: public int y  
          
          
      
    .. java:field:: public RGBA color  
          
          
      
    
    
    .. java:constructor:: public Pixel(int x, int y, RGBA color)  
          
          
      
    .. java:constructor:: public Pixel(Vector coord, RGBA color)  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Web.Canvas.Rectangle
-------------------------------------------------------------------

.. java:type:: public class Rectangle
    
    
    
    .. java:field:: public int height  
          
          
      
    .. java:field:: public int width  
          
          
      
    .. java:field:: public RGBA color  
          
          
      
    .. java:field:: public Vector topLeft  
          
          
      
    
    
    .. java:constructor:: public Rectangle(int height, int width, Vector topLeft, RGBA color)  
          
          
      
    .. java:method:: public List getPixels()  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Web.Canvas.RGBA
--------------------------------------------------------------

.. java:type:: public class RGBA
    
    
    
    .. java:field:: public short r  
          
          
      
    .. java:field:: public short g  
          
          
      
    .. java:field:: public short b  
          
          
      
    .. java:field:: public short a  
          
          
      
    
    
    .. java:constructor:: public RGBA(int r, int g, int b)  
          
          
      
    .. java:constructor:: public RGBA(int r, int g, int b, int a)  
          
          
      
    .. java:constructor:: public RGBA(Color color)  
          
          
      
    .. java:method:: static public RGBA overlay(RGBA newPixel, RGBA oldPixel)  
          
          
      
    .. java:method:: public int toInt()  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Web.Canvas.WebCanvas
-------------------------------------------------------------------

.. java:type:: public class WebCanvas
    
    
    
    .. java:field:: public final int height  
          
          
      
    .. java:field:: public final int width  
          
          
      
    .. java:field:: public List layers  
          
          
      
    
    
    .. java:constructor:: public WebCanvas(int height, int width)  
          
          
      
    .. java:method:: public RGBA getPixels()  
          
          
      
    .. java:method:: public Bitmap toBitmap()  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Web.Server.Request
-----------------------------------------------------------------

.. java:type:: public class Request
    
    
    
    .. java:field:: static private final Pattern HEADER_PATTERN  
          
          
      
    .. java:field:: public String method  
          
          
      
    .. java:field:: public String url  
          
          
      
    .. java:field:: public String version  
          
          
      
    .. java:field:: public HashMap headers  
          
          
      
    .. java:field:: public String data  
          
          
      
    
    
    .. java:constructor:: public Request(String text) throws WebError  
          
          
      
    .. java:constructor:: public Request(String method, String url, String version, HashMap headers, String data)  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Web.Server.Response
------------------------------------------------------------------

.. java:type:: public class Response
    
    
    
    .. java:field:: public int statusCode  
          
          
      
    .. java:field:: public String statusMessage  
          
          
      
    .. java:field:: public HashMap headers  
          
          
      
    .. java:field:: public byte body  
          
          
      
    
    
    .. java:constructor:: public Response(int statusCode, String statusMessage, HashMap headers, String body)  
          
          
      
    .. java:constructor:: public Response(int statusCode, String statusMessage, HashMap headers, ByteArrayOutputStream body)  
          
          
      
    .. java:method:: public String getHeaders()  
          
          
      
    .. java:method:: public byte toBytes()  
          
          
      

org.firstinspires.ftc.teamcode.Subsystems.Web.Server.WebError
------------------------------------------------------------------

.. java:type:: public class WebError
    
    
    
    .. java:field:: public String error  
          
          
      
    .. java:field:: public int statusCode  
          
          
      
    .. java:field:: public int errorCode  
          
          
      
    
    
    .. java:constructor:: public WebError(String error, int statusCode, int errorCode)  
          
          
      
    .. java:method:: public HashMap toHashMap()  
          
          
      

org.firstinspires.ftc.teamcode.Teleop.Teleop
-------------------------------------------------

.. java:type:: public class Teleop
    
    
    
    .. java:field::  double deltaT  
          
          
      
    .. java:field::  double timeCurrent  
          
          
      
    .. java:field::  double timePre  
          
          
      
    .. java:field::  ElapsedTime timer  
          
          
      
    .. java:field:: private Robot robot  
          
          
      
    
    
    .. java:method:: private void initOpMode()  
          
          
      
    .. java:method:: public void runOpMode() throws InterruptedException  
          
          Override of runOpMode()
          Please do not swallow the InterruptedException, as it is used in cases where the op mode
          needs to be terminated early.
          
          **See Also:** :java:ref:`LinearOpMode` 
      

org.firstinspires.ftc.teamcode.Testop.CaptureImages
--------------------------------------------------------

.. java:type:: public class CaptureImages
    
    This OpMode illustrates how to open a webcam and retrieve images from it. It requires a configuration
    containing a webcam with the default name ("Webcam 1"). When the opmode runs, pressing the 'A' button
    will cause a frame from the camera to be written to a file on the device, which can then be retrieved
    by various means (e.g.: Device File Explorer in Android Studio; plugging the device into a PC and
    using Media Transfer; ADB; etc.)
    
    
    .. java:field:: static private final String TAG  
          
          
      
    .. java:field:: static private final int secondsPermissionTimeout  
          
          How long we are to wait to be granted permission to use the camera before giving up. Here,
          we wait indefinitely
      
    .. java:field:: private CameraManager cameraManager  
          
          State regarding our interaction with the camera
      
    .. java:field:: private WebcamName cameraName  
          
          
      
    .. java:field:: private Camera camera  
          
          
      
    .. java:field:: private CameraCaptureSession cameraCaptureSession  
          
          
      
    .. java:field:: private EvictingBlockingQueue frameQueue  
          
          The queue into which all frames from the camera are placed as they become available.
          Frames which are not processed by the OpMode are automatically discarded.
      
    .. java:field:: private int captureCounter  
          
          State regarding where and how to save frames when the 'A' button is pressed.
      
    .. java:field:: private final File captureDirectory  
          
          
      
    .. java:field:: private Handler callbackHandler  
          
          A utility object that indicates where the asynchronous callbacks from the camera
          infrastructure are to run. In this OpMode, that's all hidden from you (but see :java:ref:`{@link .startCamera`
          if you're curious): no knowledge of multi-threading is needed here.
      
    
    
    .. java:method:: public void runOpMode()  
          
          
      
    .. java:method:: private void onNewFrame(Bitmap frame)  
          
          Do something with the frame
      
    .. java:method:: private void initializeFrameQueue(int capacity)  
          
          
      
    .. java:method:: private void openCamera()  
          
          
      
    .. java:method:: private void startCamera()  
          
          
      
    .. java:method:: private void stopCamera()  
          
          
      
    .. java:method:: private void closeCamera()  
          
          
      
    .. java:method:: private void error(String msg)  
          
          
      
    .. java:method:: private void error(String format, Object args)  
          
          
      
    .. java:method:: private boolean contains(int array, int value)  
          
          
      
    .. java:method:: private void saveBitmap(Bitmap bitmap)  
          
          
      

org.firstinspires.ftc.teamcode.Testop.IMUDirectionalTest
-------------------------------------------------------------

.. java:type:: public class IMUDirectionalTest
    
    
    
    
    
    .. java:method:: public void runOpMode() throws InterruptedException  
          
          Override of runOpMode()
          Please do not swallow the InterruptedException, as it is used in cases where the op mode
          needs to be terminated early.
          
          
          **See Also:** :java:ref:`com.qualcomm.robotcore.eventloop.opmode.LinearOpMode` 
      

org.firstinspires.ftc.teamcode.Testop.Drive.BackwardDriveTest
------------------------------------------------------------------

.. java:type:: public class BackwardDriveTest
    
    
    
    
    
    .. java:method:: public void runOpMode() throws InterruptedException  
          
          Override of runOpMode()
          Please do not swallow the InterruptedException, as it is used in cases where the op mode
          needs to be terminated early.
          
          
          **See Also:** :java:ref:`com.qualcomm.robotcore.eventloop.opmode.LinearOpMode` 
      

org.firstinspires.ftc.teamcode.Testop.Drive.CurvedStrafeDriveTest
----------------------------------------------------------------------

.. java:type:: public class CurvedStrafeDriveTest
    
    
    
    
    
    .. java:method:: public void runOpMode() throws InterruptedException  
          
          Override of runOpMode()
          Please do not swallow the InterruptedException, as it is used in cases where the op mode
          needs to be terminated early.
          
          
          **See Also:** :java:ref:`com.qualcomm.robotcore.eventloop.opmode.LinearOpMode` 
      

org.firstinspires.ftc.teamcode.Testop.Drive.ForwardDriveTest
-----------------------------------------------------------------

.. java:type:: public class ForwardDriveTest
    
    
    
    
    
    .. java:method:: public void runOpMode() throws InterruptedException  
          
          Override of runOpMode()
          Please do not swallow the InterruptedException, as it is used in cases where the op mode
          needs to be terminated early.
          
          
          **See Also:** :java:ref:`com.qualcomm.robotcore.eventloop.opmode.LinearOpMode` 
      

org.firstinspires.ftc.teamcode.Testop.Drive.PurePursuit
------------------------------------------------------------

.. java:type:: public class PurePursuit
    
    
    
    
    
    .. java:method:: public void runOpMode() throws InterruptedException  
          
          Override of runOpMode()
          Please do not swallow the InterruptedException, as it is used in cases where the op mode
          needs to be terminated early.
          
          
          **See Also:** :java:ref:`com.qualcomm.robotcore.eventloop.opmode.LinearOpMode` 
      

org.firstinspires.ftc.teamcode.Testop.Drive.StrafeDriveTest
----------------------------------------------------------------

.. java:type:: public class StrafeDriveTest
    
    
    
    
    
    .. java:method:: public void runOpMode() throws InterruptedException  
          
          Override of runOpMode()
          Please do not swallow the InterruptedException, as it is used in cases where the op mode
          needs to be terminated early.
          
          
          **See Also:** :java:ref:`com.qualcomm.robotcore.eventloop.opmode.LinearOpMode` 
      

org.firstinspires.ftc.teamcode.Testop.Drive.TurnDriveTest
--------------------------------------------------------------

.. java:type:: public class TurnDriveTest
    
    
    
    
    
    .. java:method:: public void runOpMode() throws InterruptedException  
          
          Override of runOpMode()
          Please do not swallow the InterruptedException, as it is used in cases where the op mode
          needs to be terminated early.
          
          
          **See Also:** :java:ref:`com.qualcomm.robotcore.eventloop.opmode.LinearOpMode` 
      

org.firstinspires.ftc.teamcode.Testop.Drive.VectorDriveTest
----------------------------------------------------------------

.. java:type:: public class VectorDriveTest
    
    
    
    
    
    .. java:method:: public void runOpMode() throws InterruptedException  
          
          Override of runOpMode()
          Please do not swallow the InterruptedException, as it is used in cases where the op mode
          needs to be terminated early.
          
          
          **See Also:** :java:ref:`com.qualcomm.robotcore.eventloop.opmode.LinearOpMode` 
      

org.firstinspires.ftc.teamcode.Testop.Drive.VectorDriveTest2
-----------------------------------------------------------------

.. java:type:: public class VectorDriveTest2
    
    
    
    
    
    .. java:method:: public void runOpMode() throws InterruptedException  
          
          Override of runOpMode()
          Please do not swallow the InterruptedException, as it is used in cases where the op mode
          needs to be terminated early.
          
          
          **See Also:** :java:ref:`com.qualcomm.robotcore.eventloop.opmode.LinearOpMode` 
      

org.firstinspires.ftc.teamcode.Util.AllianceColor
------------------------------------------------------

.. java:type:: public enum AllianceColor
    
    The robot's current alliance, either red or blue
    .. java:field:: RED  
          
          
      
    .. java:field:: BLUE  
          
          
      

org.firstinspires.ftc.teamcode.Util.BasicAccelerationIntegrator
--------------------------------------------------------------------

.. java:type:: public class BasicAccelerationIntegrator
    
    :java:ref:`{@link org.firstinspires.ftc.teamcode.Util.BasicAccelerationIntegrator` provides a very naive implementation of
    an acceleration integration algorithm. It just does the basic physics.
    TODO: Better integration algorithm
    
    
    .. java:field::  BNO055IMU parameters  
          
          
      
    .. java:field::  Position position  
          
          
      
    .. java:field::  Velocity velocity  
          
          
      
    .. java:field::  Acceleration acceleration  
          
          
      
    .. java:field::  MasterLogger logger  
          
          
      
    
    
    .. java:constructor:: public BasicAccelerationIntegrator()  
          
          
      
    .. java:method:: public Position getPosition()  
          
          
      
    .. java:method:: public Velocity getVelocity()  
          
          
      
    .. java:method:: public Acceleration getAcceleration()  
          
          
      
    .. java:method:: public void initialize(BNO055IMU parameters, Position initialPosition, Velocity initialVelocity)  
          
          
      
    .. java:method:: public void update(Acceleration linearAcceleration)  
          
          
      

org.firstinspires.ftc.teamcode.Util.MasterLogger
-----------------------------------------------------

.. java:type:: public class MasterLogger
    
    
    
    .. java:field:: public Telemetry telemetry  
          
          
      
    .. java:field::  String tag  
          
          
      
    
    
    .. java:constructor:: public MasterLogger(Telemetry telemetry, String tag)  
          
          
      
    .. java:method:: public void error(String message)  
          
          
      
    .. java:method:: public void error(String message, Object o)  
          
          
      
    .. java:method:: public void warning(String message)  
          
          
      
    .. java:method:: public void warning(String message, Object o)  
          
          
      
    .. java:method:: public void info(String message)  
          
          
      
    .. java:method:: public void info(String message, Object o)  
          
          
      
    .. java:method:: public void debug(String message)  
          
          
      
    .. java:method:: public void debug(String message, Object o)  
          
          
      
    .. java:method:: public void verbose(String message)  
          
          
      
    .. java:method:: public void verbose(String message, Object o)  
          
          
      

org.firstinspires.ftc.teamcode.Util.Pose
---------------------------------------------

.. java:type:: public class Pose
    
    
    
    .. java:field:: public double x  
          
          
      
    .. java:field:: public double y  
          
          
      
    .. java:field:: public double heading  
          
          
      
    .. java:field:: public Vector velocity  
          
          
      
    
    
    .. java:constructor:: public Pose(double x, double y, double heading)  
          
          
      
    .. java:constructor:: public Pose(Vector v, double heading)  
          
          
      
    .. java:method:: public Vector getCoordinate()  
          
          
      
    .. java:method:: public boolean fuzzyCompare(Pose other)  
          
          
      
    .. java:method:: public String toString()  
          
          
      

org.firstinspires.ftc.teamcode.Util.ServoEx
------------------------------------------------

.. java:type:: public class ServoEx
    
    ServoEx class from ftcLib
    
    
    .. java:field:: private final double maxPosition  
          
          
      
    .. java:field:: private final double minPosition  
          
          
      
    .. java:field:: private final Servo servo  
          
          
      
    .. java:field:: private double maxAngle  
          
          
      
    
    
    .. java:constructor:: public ServoEx(HardwareMap hw, String servoName, double minAngle, double maxAngle, AngleUnit angleUnit)  
          
          
      
    .. java:constructor:: public ServoEx(HardwareMap hw, String servoName, double minDegree, double maxDegree)  
          
          
      
    .. java:method:: public void rotateByAngle(double angle, AngleUnit angleUnit)  
          
          
      
    .. java:method:: public void rotateByAngle(double degrees)  
          
          
      
    .. java:method:: public void turnToAngle(double angle, AngleUnit angleUnit)  
          
          
      
    .. java:method:: public void turnToAngle(double degrees)  
          
          
      
    .. java:method:: public void rotateBy(double position)  
          
          
      
    .. java:method:: public void setRange(double min, double max, AngleUnit angleUnit)  
          
          
      
    .. java:method:: public void setRange(double min, double max)  
          
          
      
    .. java:method:: public boolean getInverted()  
          
          
      
    .. java:method:: public void setInverted(boolean isInverted)  
          
          
      
    .. java:method:: public double getPosition()  
          
          
      
    .. java:method:: public void setPosition(double position)  
          
          
      
    .. java:method:: public double getAngle(AngleUnit angleUnit)  
          
          
      
    .. java:method:: public double getAngle()  
          
          
      
    .. java:method:: public double getAngleRange(AngleUnit angleUnit)  
          
          
      
    .. java:method:: public double getAngleRange()  
          
          
      
    .. java:method:: public void disable()  
          
          
      
    .. java:method:: public String getDeviceType()  
          
          
      
    .. java:method:: private double toRadians(double angle, AngleUnit angleUnit)  
          
          
      
    .. java:method:: private double fromRadians(double angle, AngleUnit angleUnit)  
          
          
      

org.firstinspires.ftc.teamcode.Util.Vector
-----------------------------------------------

.. java:type:: public class Vector
    
    
    
    
    
    .. java:constructor:: public Vector(double x, double y)  
          
          Simple constructor.
          Build a vector from its coordinates
          :param x: abscissa
          :param y: ordinate
          
          **See Also:** :java:ref:`getX()` 
          
          **See Also:** :java:ref:`getY()` 
      
    .. java:constructor:: public Vector(double v) throws DimensionMismatchException  
          
          Simple constructor.
          Build a vector from its coordinates
          :param v: coordinates array
          :throws: DimensionMismatchException
          
          **See Also:** :java:ref:`toArray()` 
      
    .. java:constructor:: public Vector(double a, Vector2D u)  
          
          Multiplicative constructor
          Build a vector from another one and a scale factor.
          The vector built will be a * u
          :param a: scale factor
          :param u: base (unscaled) vector
      
    .. java:constructor:: public Vector(double a1, Vector2D u1, double a2, Vector2D u2)  
          
          Linear constructor
          Build a vector from two other ones and corresponding scale factors.
          The vector built will be a1 * u1 + a2 * u2
          :param a1: first scale factor
          :param u1: first base (unscaled) vector
          :param a2: second scale factor
          :param u2: second base (unscaled) vector
      
    .. java:constructor:: public Vector(double a1, Vector2D u1, double a2, Vector2D u2, double a3, Vector2D u3)  
          
          Linear constructor
          Build a vector from three other ones and corresponding scale factors.
          The vector built will be a1 * u1 + a2 * u2 + a3 * u3
          :param a1: first scale factor
          :param u1: first base (unscaled) vector
          :param a2: second scale factor
          :param u2: second base (unscaled) vector
          :param a3: third scale factor
          :param u3: third base (unscaled) vector
      
    .. java:constructor:: public Vector(double a1, Vector2D u1, double a2, Vector2D u2, double a3, Vector2D u3, double a4, Vector2D u4)  
          
          Linear constructor
          Build a vector from four other ones and corresponding scale factors.
          The vector built will be a1 * u1 + a2 * u2 + a3 * u3 + a4 * u4
          :param a1: first scale factor
          :param u1: first base (unscaled) vector
          :param a2: second scale factor
          :param u2: second base (unscaled) vector
          :param a3: third scale factor
          :param u3: third base (unscaled) vector
          :param a4: fourth scale factor
          :param u4: fourth base (unscaled) vector
      

